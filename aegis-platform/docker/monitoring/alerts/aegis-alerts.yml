# Prometheus Alert Rules for Aegis Platform
groups:
  - name: aegis-platform
    rules:
      # High-level service availability
      - alert: AegisBackendDown
        expr: up{job="aegis-backend"} == 0
        for: 1m
        labels:
          severity: critical
          service: backend
        annotations:
          summary: "Aegis Backend service is down"
          description: "The Aegis Backend API has been down for more than 1 minute."

      - alert: AegisHighErrorRate
        expr: rate(http_requests_total{status=~"5.."}[5m]) > 0.1
        for: 2m
        labels:
          severity: warning
          service: backend
        annotations:
          summary: "High error rate detected"
          description: "Error rate is {{ $value }} errors per second for the last 5 minutes."

      - alert: AegisHighResponseTime
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 2
        for: 5m
        labels:
          severity: warning
          service: backend
        annotations:
          summary: "High response time detected"
          description: "95th percentile response time is {{ $value }}s for the last 5 minutes."

  - name: infrastructure
    rules:
      # Database monitoring
      - alert: MySQLDown
        expr: up{job="mysql"} == 0
        for: 1m
        labels:
          severity: critical
          service: database
        annotations:
          summary: "MySQL database is down"
          description: "MySQL database has been down for more than 1 minute."

      - alert: MySQLHighConnections
        expr: mysql_global_status_threads_connected / mysql_global_variables_max_connections * 100 > 80
        for: 5m
        labels:
          severity: warning
          service: database
        annotations:
          summary: "MySQL connection usage is high"
          description: "MySQL is using {{ $value }}% of available connections."

      - alert: MySQLSlowQueries
        expr: rate(mysql_global_status_slow_queries[5m]) > 0.1
        for: 5m
        labels:
          severity: warning
          service: database
        annotations:
          summary: "MySQL slow queries detected"
          description: "{{ $value }} slow queries per second detected."

      # Redis monitoring
      - alert: RedisDown
        expr: up{job="redis"} == 0
        for: 1m
        labels:
          severity: critical
          service: cache
        annotations:
          summary: "Redis cache is down"
          description: "Redis cache has been down for more than 1 minute."

      - alert: RedisHighMemoryUsage
        expr: redis_memory_used_bytes / redis_memory_max_bytes * 100 > 90
        for: 5m
        labels:
          severity: warning
          service: cache
        annotations:
          summary: "Redis memory usage is high"
          description: "Redis is using {{ $value }}% of available memory."

  - name: system-resources
    rules:
      # System resource monitoring
      - alert: HighCPUUsage
        expr: 100 - (avg(irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
        for: 10m
        labels:
          severity: warning
          service: system
        annotations:
          summary: "High CPU usage detected"
          description: "CPU usage is {{ $value }}% for the last 10 minutes."

      - alert: HighMemoryUsage
        expr: (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100 > 85
        for: 10m
        labels:
          severity: warning
          service: system
        annotations:
          summary: "High memory usage detected"
          description: "Memory usage is {{ $value }}% for the last 10 minutes."

      - alert: LowDiskSpace
        expr: (1 - (node_filesystem_avail_bytes / node_filesystem_size_bytes)) * 100 > 90
        for: 5m
        labels:
          severity: critical
          service: system
        annotations:
          summary: "Low disk space detected"
          description: "Disk usage is {{ $value }}% on {{ $labels.device }}."

  - name: security
    rules:
      # Security monitoring
      - alert: HighFailedLoginAttempts
        expr: rate(auth_failed_login_attempts_total[5m]) > 5
        for: 2m
        labels:
          severity: warning
          service: security
        annotations:
          summary: "High failed login attempts detected"
          description: "{{ $value }} failed login attempts per second detected."

      - alert: SuspiciousAPIActivity
        expr: rate(http_requests_total{status="403"}[5m]) > 10
        for: 2m
        labels:
          severity: warning
          service: security
        annotations:
          summary: "Suspicious API activity detected"
          description: "{{ $value }} forbidden requests per second detected."

      - alert: UnauthorizedAccess
        expr: rate(http_requests_total{status="401"}[5m]) > 20
        for: 2m
        labels:
          severity: warning
          service: security
        annotations:
          summary: "High unauthorized access attempts"
          description: "{{ $value }} unauthorized requests per second detected."