# Production Nginx Configuration for Aegis Platform
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    
    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;
    server_tokens off;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:; media-src 'self'; object-src 'none'; child-src 'self'; form-action 'self'; upgrade-insecure-requests;" always;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    
    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name aegis.yourdomain.com www.aegis.yourdomain.com api.aegis.yourdomain.com;
        return 301 https://$server_name$request_uri;
    }
    
    # Main frontend server
    server {
        listen 443 ssl http2;
        server_name aegis.yourdomain.com www.aegis.yourdomain.com;
        root /usr/share/nginx/html;
        index index.html;
        
        # SSL certificates
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_private_key /etc/nginx/ssl/key.pem;
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Static assets with long cache
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options "nosniff";
        }
        
        # Handle client-side routing
        location / {
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }
        
        # Security - deny access to hidden files
        location ~ /\. {
            deny all;
        }
        
        # Block common attack vectors
        location ~* \.(sql|bak|backup|old|tmp)$ {
            deny all;
        }
    }
    
    # API server
    server {
        listen 443 ssl http2;
        server_name api.aegis.yourdomain.com;
        
        # SSL certificates
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_private_key /etc/nginx/ssl/key.pem;
        
        # API rate limiting
        location /api/v1/auth/login {
            limit_req zone=login burst=5 nodelay;
            proxy_pass http://backend:8000;
            include /etc/nginx/proxy_params;
        }
        
        location /api {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://backend:8000;
            include /etc/nginx/proxy_params;
        }
        
        # Health check for API
        location /health {
            access_log off;
            proxy_pass http://backend:8000/health;
            proxy_set_header Host $host;
        }
        
        # Block direct access to sensitive endpoints
        location ~* /(admin|config|env|settings) {
            deny all;
        }
    }
    
    # Monitoring endpoints (internal access only)
    server {
        listen 8080;
        server_name localhost;
        
        # Prometheus metrics
        location /metrics {
            allow 172.16.0.0/12;  # Docker networks
            allow 10.0.0.0/8;     # Private networks  
            allow 127.0.0.1;      # Localhost
            deny all;
            
            proxy_pass http://backend:8000/metrics;
            proxy_set_header Host $host;
        }
        
        # Nginx status
        location /nginx_status {
            allow 172.16.0.0/12;
            allow 10.0.0.0/8;
            allow 127.0.0.1;
            deny all;
            
            stub_status on;
            access_log off;
        }
    }
}