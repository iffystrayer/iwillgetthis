# ==============================================
# Aegis Platform - Production Nginx Configuration
# ==============================================
# This configuration provides:
# - SSL/TLS termination with security headers
# - Rate limiting and DDoS protection  
# - Security hardening
# - Performance optimization
# ==============================================

# Global rate limiting zones
limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
limit_req_zone $binary_remote_addr zone=general:10m rate=200r/m;

# Connection limiting
limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

# Map for real IP detection
map $http_x_forwarded_for $real_ip {
    ~^(\d+\.\d+\.\d+\.\d+) $1;
    default $remote_addr;
}

# Security headers map
map $sent_http_content_type $csp_header {
    ~^text/html "default-src 'self'; script-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' wss: https:; frame-ancestors 'none'; base-uri 'self'; form-action 'self'";
    default "default-src 'self'";
}

server {
    listen 80;
    server_name yourdomain.com www.yourdomain.com app.yourdomain.com;
    
    # Security headers for HTTP (before redirect)
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options DENY always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Redirect all HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name yourdomain.com www.yourdomain.com app.yourdomain.com;
    
    # SSL Configuration
    ssl_certificate /etc/ssl/certs/aegis-platform.crt;
    ssl_certificate_key /etc/ssl/private/aegis-platform.key;
    
    # SSL Security Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    
    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/ssl/certs/aegis-platform-chain.crt;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # DH Parameters for Perfect Forward Secrecy
    ssl_dhparam /etc/ssl/certs/dhparam.pem;
    
    # Connection limits
    limit_conn conn_limit_per_ip 50;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy $csp_header always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=(), magnetometer=(), gyroscope=(), speaker=(), vibrate=(), fullscreen=(self), sync-xhr=()" always;
    
    # Hide server information
    server_tokens off;
    
    # Request size limits
    client_max_body_size 50M;
    client_body_timeout 30s;
    client_header_timeout 30s;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/xml
        image/svg+xml;
    
    # Brotli compression (if module available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/xml image/svg+xml application/x-font-ttf image/vnd.microsoft.icon application/x-font-opentype application/json font/eot application/vnd.ms-fontobject application/javascript font/otf application/xml application/xhtml+xml text/javascript  application/x-javascript text/plain application/x-font-truetype application/xml+rss image/x-icon font/opentype text/css image/x-win-bitmap;
    
    # Frontend static files
    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        
        # Rate limiting for general requests
        limit_req zone=general burst=50 nodelay;
        
        # Try files or fallback to index.html for SPA routing
        try_files $uri $uri/ /index.html;
        
        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # Security headers for static assets
            add_header X-Content-Type-Options nosniff always;
            add_header X-Frame-Options DENY always;
        }
        
        # Security for HTML files
        location ~* \.html$ {
            expires 1h;
            add_header Cache-Control "public, must-revalidate";
            add_header Content-Security-Policy $csp_header always;
        }
    }
    
    # API proxy to backend
    location /api/ {
        # Strict rate limiting for API
        limit_req zone=api burst=200 nodelay;
        
        # Special rate limiting for auth endpoints
        location /api/v1/auth/ {
            limit_req zone=login burst=10 nodelay;
            proxy_pass http://backend_servers;
            include /etc/nginx/proxy_params;
        }
        
        proxy_pass http://backend_servers;
        include /etc/nginx/proxy_params;
        
        # API-specific headers
        add_header X-API-Version "1.0" always;
        add_header X-Rate-Limit-Remaining $limit_req_status always;
    }
    
    # Health check endpoint (no rate limiting)
    location /health {
        access_log off;
        proxy_pass http://backend_servers/health/;
        include /etc/nginx/proxy_params;
    }
    
    # Admin interface (additional security)
    location /admin/ {
        # Very strict rate limiting for admin
        limit_req zone=login burst=5 nodelay;
        
        # IP whitelisting for admin (uncomment and configure)
        # allow 192.168.1.0/24;
        # allow 10.0.0.0/8;
        # deny all;
        
        proxy_pass http://backend_servers;
        include /etc/nginx/proxy_params;
        
        # Additional security headers for admin
        add_header X-Frame-Options "DENY" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; connect-src 'self'" always;
    }
    
    # Block access to sensitive files
    location ~ /\.(git|svn|hg|bzr) {
        deny all;
        return 404;
    }
    
    location ~ /\.(env|config|log)$ {
        deny all;
        return 404;
    }
    
    location ~ /(config|logs|temp|cache)/ {
        deny all;
        return 404;
    }
    
    # Security.txt (RFC 9116)
    location /.well-known/security.txt {
        return 200 "Contact: security@yourdomain.com\nExpires: 2026-08-09T00:00:00.000Z\nPreferred-Languages: en\nCanonical: https://yourdomain.com/.well-known/security.txt";
        add_header Content-Type text/plain;
    }
    
    # Monitoring endpoints for uptime checks
    location /monitoring/health {
        access_log off;
        return 200 "OK";
        add_header Content-Type text/plain;
    }
    
    # Error pages
    error_page 400 401 403 404 /error.html;
    error_page 500 502 503 504 /5xx.html;
    
    location = /error.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    location = /5xx.html {
        root /usr/share/nginx/html;
        internal;
    }
}

# Backend upstream configuration
upstream backend_servers {
    least_conn;
    server aegis-backend:8000 max_fails=3 fail_timeout=30s;
    # Add additional backend servers for high availability
    # server aegis-backend-2:8000 max_fails=3 fail_timeout=30s;
    
    # Health check (if nginx-plus or third-party module)
    # health_check interval=30s fails=3 passes=2;
}

# Proxy parameters
# /etc/nginx/proxy_params content:
# proxy_set_header Host $http_host;
# proxy_set_header X-Real-IP $remote_addr;
# proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
# proxy_set_header X-Forwarded-Proto $scheme;
# proxy_set_header X-Forwarded-Host $server_name;
# proxy_connect_timeout 30s;
# proxy_send_timeout 30s;
# proxy_read_timeout 30s;
# proxy_redirect off;